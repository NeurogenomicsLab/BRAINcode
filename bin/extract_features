#############################################
# Author: Xianjun Dong
# Email: xdong@rics.bwh.harvard.edu
# Version: 0.1
#############################################
#!/bin/bash

# Bash script to extract gene features (e.g. introns/exons/CDS/5UTR/3UTR) from inputted BED or GTF files
# Usage: extract_features -i <in.bed|gtf> -f [intron|CDS|5UTR|3UTR]
## Note: The input must be BED12 format (http://genome.ucsc.edu/FAQ/FAQformat.html#format1)
# For GTF input, you can convert to bed12 format first by tools such as gtf2bed (https://ea-utils.googlecode.com/svn/trunk/clipper/gtf2bed)
# If you want BED6 output, then simply pipe the output to bed12ToBed6 (http://bedtools.readthedocs.org/en/latest/content/tools/bed12tobed6.html)

function usage {
echo -e "usage: $(basename $0) -i <input.gtf|input.bed> -f [intron|exon|CDS|5UTR|3UTR]"
exit
}

#INPUTS
if [ "$1" == "" ]; then usage; fi
while [ "$1" != "" ]; do
    case $1 in
        -i | --input )          shift; INPUT=$1 ;; # input file                      
        -f | --feature )        shift; FEATURE=$1 ;; # feature to extract
        -h | --help )           usage ;;
        -o | --output-format )  shift; OUTPUT_F=$1 ;;
        * )                     echo "don't understand "$1
    esac
    shift
done

ext=`echo ${INPUT##*\.} | tr [:upper:] [:lower:]`          
case $ext in
    gtf )
        case "$FEATURE" in
            "" | exon | exons )
                $HOME/neurogen/pipeline/RNAseq/bin/gtf2bed $INPUT  ;;
            intron | introns )
                $HOME/neurogen/pipeline/RNAseq/bin/gtf2bed $INPUT | awk '{OFS="\t";split($11,a,","); split($12,b,","); A=""; B=""; for(i=1;i<length(a)-1;i++) {A=A""(b[i+1]-b[i]-a[i])",";B=B""(b[i]+a[i]-(b[1]+a[1]))",";} if($10>1) print $1,$2+a[1], $3-a[length(a)-1], $4,$5,$6,$2+a[1], $3-a[length(a)-1],$9,$10-1,A,B;}' ;;
            CDS | cds )
                $HOME/neurogen/pipeline/RNAseq/bin/gtf2bed $INPUT | awk '{OFS="\t";split($11,a,","); split($12,b,","); A=""; B=""; if($7==$8) next; j=0; for(i=1;i<length(a);i++) if(($2+b[i]+a[i])>$7 && ($2+b[i])<$8) {j++; start=$2+b[i]-$7; size=a[i]; if(($2+b[i])<=$7) {start=0;size=size-($7-($2+b[i]));} if(($2+a[i]+b[i])>=$8) {size=size-($2+a[i]+b[i]-$8);} A=A""size",";B=B""start",";} print $1,$7,$8,$4,$5,$6,$7,$8,$9,j,A,B;}' ;;
            5UTR | 5utr )
                $HOME/neurogen/pipeline/RNAseq/bin/gtf2bed $INPUT | awk '{OFS="\t";split($11,a,","); split($12,b,","); A=""; B="";  if($7==$8) next; if($6=="+" && $2<$7) {for(i=1;i<length(a);i++) if(($2+b[i]+a[i])<=$7) {A=A""a[i]",";B=B""b[i]",";} else {A=A""($7-$2-b[i])",";B=B""b[i]","; break; } print $1,$2,$7,$4,$5,$6,$2,$7,$9,i,A,B;} if($6=="-" && $8<$3) {for(i=length(a)-1;i>0;i--) if(($2+b[i])>=$8) {A=a[i]","A;B=($2+b[i]-$8)","B;} else {A=($2+b[i]+a[i]-$8)","A;B=0","B; break; } print $1,$8,$3,$4,$5,$6,$8,$3,$9,length(a)-i,A,B;}}' ;;
            3UTR | 3utr )
                $HOME/neurogen/pipeline/RNAseq/bin/gtf2bed $INPUT | awk '{OFS="\t";split($11,a,","); split($12,b,","); A=""; B=""; if($7==$8) next; if($6=="-" && $2<$7) {for(i=1;i<length(a);i++) if(($2+b[i]+a[i])<=$7) {A=A""a[i]",";B=B""b[i]",";} else {A=A""($7-$2-b[i])",";B=B""b[i]","; break; } print $1,$2,$7,$4,$5,$6,$2,$7,$9,i,A,B;} if($6=="+" && $8<$3) {for(i=length(a)-1;i>0;i--) if(($2+b[i])>=$8) {A=a[i]","A;B=($2+b[i]-$8)","B;} else {A=($2+b[i]+a[i]-$8)","A;B=0","B; break; } print $1,$8,$3,$4,$5,$6,$8,$3,$9,length(a)-i,A,B;}}' ;;
            * )
                echo "don't understand "$FEATURE; usage ;;
        esac ;;
    bed )
        case "$FEATURE" in
            "" | exon | exons )
                cat $INPUT ;;  # do nothing
            intron | introns )
                cat $INPUT | awk '{OFS="\t";split($11,a,","); split($12,b,","); A=""; B=""; for(i=1;i<length(a)-1;i++) {A=A""(b[i+1]-b[i]-a[i])",";B=B""(b[i]+a[i]-(b[1]+a[1]))",";} if($10>1) print $1,$2+a[1], $3-a[length(a)-1], $4,$5,$6,$2+a[1], $3-a[length(a)-1],$9,$10-1,A,B;}' ;;
            CDS | cds )
                cat $INPUT | awk '{OFS="\t";split($11,a,","); split($12,b,","); A=""; B=""; if($7==$8) next; j=0; for(i=1;i<length(a);i++) if(($2+b[i]+a[i])>$7 && ($2+b[i])<$8) {j++; start=$2+b[i]-$7; size=a[i]; if(($2+b[i])<=$7) {start=0;size=size-($7-($2+b[i]));} if(($2+a[i]+b[i])>=$8) {size=size-($2+a[i]+b[i]-$8);} A=A""size",";B=B""start",";} print $1,$7,$8,$4,$5,$6,$7,$8,$9,j,A,B;}' ;;
            5UTR | 5utr )
                cat $INPUT | awk '{OFS="\t";split($11,a,","); split($12,b,","); A=""; B="";  if($7==$8) next; if($6=="+" && $2<$7) {for(i=1;i<length(a);i++) if(($2+b[i]+a[i])<=$7) {A=A""a[i]",";B=B""b[i]",";} else {A=A""($7-$2-b[i])",";B=B""b[i]","; break; } print $1,$2,$7,$4,$5,$6,$2,$7,$9,i,A,B;} if($6=="-" && $8<$3) {for(i=length(a)-1;i>0;i--) if(($2+b[i])>=$8) {A=a[i]","A;B=($2+b[i]-$8)","B;} else {A=($2+b[i]+a[i]-$8)","A;B=0","B; break; } print $1,$8,$3,$4,$5,$6,$8,$3,$9,length(a)-i,A,B;}}' ;;
            3UTR | 3utr )
                cat $INPUT | awk '{OFS="\t";split($11,a,","); split($12,b,","); A=""; B=""; if($7==$8) next; if($6=="-" && $2<$7) {for(i=1;i<length(a);i++) if(($2+b[i]+a[i])<=$7) {A=A""a[i]",";B=B""b[i]",";} else {A=A""($7-$2-b[i])",";B=B""b[i]","; break; } print $1,$2,$7,$4,$5,$6,$2,$7,$9,i,A,B;} if($6=="+" && $8<$3) {for(i=length(a)-1;i>0;i--) if(($2+b[i])>=$8) {A=a[i]","A;B=($2+b[i]-$8)","B;} else {A=($2+b[i]+a[i]-$8)","A;B=0","B; break; } print $1,$8,$3,$4,$5,$6,$8,$3,$9,length(a)-i,A,B;}}' ;;
            * )
                echo "don't understand "$FEATURE; usage ;;
        esac ;;
    * )
        echo "unsupported format "$ext; usage ;;
esac